buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
        spockVersion = '1.1-groovy-2.4'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'codenarc'

war {
    baseName = 'movie-service'
    version = '1.0.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

codenarcMain {
    configFile = rootProject.file("config/codenarc/codenarcMain.groovy")

    reports {
        html.enabled = true
    }
}

codenarcTest {
    configFile = rootProject.file("config/codenarc/codenarcTest.groovy")

    reports {
        html.enabled = true
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    compile('org.flywaydb:flyway-core')
    compile('org.codehaus.groovy:groovy')
    compile('org.codehaus.groovy:groovy-json')
    runtime('mysql:mysql-connector-java')

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1')
    testCompile("org.spockframework:spock-core:${spockVersion}")
    testCompile("org.spockframework:spock-spring:${spockVersion}")
    testCompile('org.springframework.security:spring-security-test')

    testRuntime('cglib:cglib-nodep:3.2.4') // allows mocking of classes (in addition to interfaces)
    testRuntime('org.objenesis:objenesis:2.5.1') // allows mocking of classes without default constructor (together with CGLIB)
}
bootRun {
    systemProperties["spring.profiles.active"] = System.properties["spring.profiles.active"] ?: "development"
}

test {
    systemProperties["spring.profiles.active"] = System.properties["spring.profiles.active"] ?: "test"
    testLogging {
        exceptionFormat = 'full'
    }
}